# Generated by Django 4.0.6 on 2022-07-05 16:12
import csv

from django.db import migrations, transaction
import os
fixture_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), '../fixtures'))
fixture_filename = 'worldcities.csv'

def add_cities(apps, schema_editor):
    City = apps.get_model("cities", "City")
    Country = apps.get_model("cities", "Country")
    fixture_file = os.path.join(fixture_dir, fixture_filename)
    with open(fixture_file, mode='r') as read_obj:
        sniffer = csv.Sniffer()
        dialect = sniffer.sniff(read_obj.readline())
        read_obj.seek(0)
        # Create a csv.reader object from the input file object
        csv_reader = csv.DictReader(
            read_obj,
            delimiter=dialect.delimiter,
        )
        countries = {}
        for row in csv_reader:
            if not all(field.strip() for field in row):
                continue
            country_name = row['country']
            if country_name not in countries:
                countries[country_name] = {'iso2': row['iso2'], 'iso3': row['iso3'], 'cities': set()}
            countries[country_name]['cities'].add(row['city'])

        for country in Country.objects.bulk_create(
            Country(
                name=country_name,
                iso2=countries[country_name]['iso2'],
                iso3=countries[country_name]['iso3'],
            ) for country_name in countries
        ):
            countries[country.name]['pk'] = country.pk

        cities = []
        for country_name, value in countries.items():
            cities.extend(City(name=city_name, country_id=countries[country_name]['pk'],) for city_name in value['cities'])

        with transaction.atomic():
            City.objects.bulk_create(cities)


def drop_cities(apps, schema_editor):
    City = apps.get_model("cities", "City")
    Country = apps.get_model("cities", "Country")
    Country.objects.all().delete()
    City.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('cities', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(add_cities, drop_cities),
    ]
